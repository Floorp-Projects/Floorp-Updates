# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

name: Deliver Floorp RC updates
on:
  workflow_dispatch:
    inputs:
      win-mar-url:
        type: string
        required: true
        description: Windows x86_64 complete MAR file URL
      linux-mar-url:
        type: string
        required: true
        description: Linux x86_64 complete MAR file URL
      mac-mar-url:
        type: string
        required: true
        description: macOS Universal complete MAR file URL
      mac-buildid:
        type: string
        required: true
        description: BuildID of macOS build
      mac-firefox-version:
        type: string
        required: true
        description: Firefox version for macOS build (e.g. 124.0)
      display-version:
        type: string
        required: true
        description: Display version (e.g. 12.0.4)
      release-note-url:
        type: string
        default: https://blog.ablaze.one/category/ablaze/ablaze-project/floorp/
        required: false
        description: Release Note URL

jobs:
  deliver-rc-updates:
    runs-on: ubuntu-22.04

    env:
      DISPLAY_VERSION: ${{ inputs.display-version }}
      RELEASE_NOTE_URL: ${{ inputs.release-note-url }}
    steps:
      - name: Show parameters
        run: |
          echo Windows MAR : ${{ inputs.win-mar-url }}
          echo Linux   MAR : ${{ inputs.linux-mar-url }}
          echo macOS   MAR : ${{ inputs.mac-mar-url }}
          echo Display Version : $DISPLAY_VERSION
          echo macOS BuildID   : ${{ inputs.mac-buildid }}
          echo macOS Fx Ver    : ${{ inputs.mac-firefox-version }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Prepare workspace
        run: mkdir -p ~/update_tmpfiles

      - name: Download MAR tools
        run: |
          cd ~/update_tmpfiles
          wget -nv https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-3.toolchains.v3.linux64-mar-tools.latest/artifacts/public%2Fbuild%2Fmar-tools.tar.zst -O mar-tools.tar.zst
          tar -xvf mar-tools.tar.zst

      - name: Process Windows & Linux MAR
        run: |
          set -e

          process() {
            local OS=$1
            local ARCH=$2
            local URL=$3
            local OUT_ENV_PREFIX=$4   # e.g. WIN or LINUX

            cd ~/update_tmpfiles
            mkdir -p "$OS-$ARCH"
            cd "$OS-$ARCH"
            wget -nv "$URL" -O file.mar

            # size
            local SIZE
            SIZE=$(stat -c%s "file.mar")
            echo "${OUT_ENV_PREFIX}_SIZE=$SIZE" >> $GITHUB_ENV

            # extract application.ini & omni.ja
            ~/update_tmpfiles/mar-tools/mar -x file.mar
            mkdir omni_tmp
            unzip -q -d omni_tmp omni.ja || true
            cp omni_tmp/modules/AppConstants.* AppConstants.jsfile || true

            local BUILDID
            BUILDID=$(grep "^BuildID=" application.ini | cut -d= -f2)
            echo "${OUT_ENV_PREFIX}_BUILDID=$BUILDID" >> $GITHUB_ENV

            local FIREFOX_VERSION
            FIREFOX_VERSION=$(grep "^Version=" application.ini | cut -d= -f2 | sed "s/\.0$//")
            echo "${OUT_ENV_PREFIX}_FIREFOX_VERSION=$FIREFOX_VERSION" >> $GITHUB_ENV
          }

          process WINNT x86_64 '${{ inputs.win-mar-url }}' WIN
          process Linux x86_64 '${{ inputs.linux-mar-url }}' LINUX

      - name: Generate macOS env
        run: |
          wget -nv '${{ inputs.mac-mar-url }}' -O ~/update_tmpfiles/mac-file.mar
          echo "MAC_SIZE=$(stat -c%s ~/update_tmpfiles/mac-file.mar)" >> $GITHUB_ENV
          echo "BUILDID=${{ inputs.mac-buildid }}" >> $GITHUB_ENV
          echo "FIREFOX_VERSION=${{ inputs.mac-firefox-version }}" >> $GITHUB_ENV

      - name: Create update.xml files
        run: |
          set -e
          make_xml () {
            local OS=$1
            local ARCH=$2
            local SIZE=$3
            local MAR_URL=$4

            update_xml=(
            '<?xml version="1.0" encoding="UTF-8"?>'
            '<updates>'
            "  <update type=\"minor\" displayVersion=\"${DISPLAY_VERSION}\" appVersion=\"${FIREFOX_VERSION}\" platformVersion=\"${FIREFOX_VERSION}\" buildID=\"${BUILDID}\" detailsURL=\"${RELEASE_NOTE_URL}\">"
            "    <patch type=\"complete\" URL=\"${MAR_URL}\" size=\"${SIZE}\"/>"
            '  </update>'
            '</updates>'
            )
            mkdir -p browser/rc/${OS}/${ARCH}
            : > browser/rc/${OS}/${ARCH}/update.xml
            for line in "${update_xml[@]}"; do echo "$line" >> browser/rc/${OS}/${ARCH}/update.xml ; done
          }

          make_xml WINNT x86_64 $WIN_SIZE '${{ inputs.win-mar-url }}'
          make_xml Linux x86_64 $LINUX_SIZE '${{ inputs.linux-mar-url }}'
          make_xml Darwin x86_64 $MAC_SIZE '${{ inputs.mac-mar-url }}'
          make_xml Darwin aarch64 $MAC_SIZE '${{ inputs.mac-mar-url }}'

      - name: Commit and push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "üõà Â§âÊõ¥„Åå„Å™„ÅÑ„Åü„ÇÅ„Ç≥„Éü„ÉÉ„Éà„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åô„ÄÇ"
            exit 0
          fi
          git commit -m "Update Floorp RC update.xml (${DISPLAY_VERSION})"
          git pull -r
          git push origin
